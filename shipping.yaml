- name: install shipping component
  hosts: shipping
  become: yes
  vars:
    mysql_password: RoboShop@1
  tasks:
    - name: install maven
      ansible.builtin.dnf:
        name: maven
        state: present

    - name: create roboshop user
      ansible.builtin.user:
        name: roboshop

    - name: Recursively remove app directory
      ansible.builtin.file:
        path: /app
        state: absent

    - name: create app directory
      ansible.builtin.file:
        path: /app
        state: directory

    - name: create schema directory if not exists
      ansible.builtin.file:
        path: /app/schema
        state: directory
        mode: '0755'

    - name: upload shipping.sql file if not exists
      ansible.builtin.copy:
        src: /path/to/local/shipping.sql  # Correct local path to shipping.sql file
        dest: /app/schema/shipping.sql
      when: not shipping_sql.stat.exists

    - name: check cities schema exists or not
      ansible.builtin.command:
        cmd: mysql -h mysql.forpractice.uno -uroot -p{{mysql_password}} -sN -e "SELECT COUNT(*) FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = 'cities'"
      register: schema

    - name: debug schema output
      ansible.builtin.debug:
        msg: "Schema output: {{ schema.stdout }}"

    - name: load cities data
      ansible.builtin.shell:
        cmd: "mysql -h mysql.forpractice.uno -uroot -p{{mysql_password}} < /app/schema/shipping.sql"
      when: schema.stdout != "1" and shipping_sql.stat.exists

    - name: start and enable shipping service
      ansible.builtin.systemd:
        name: shipping
        state: restarted
        enabled: yes
