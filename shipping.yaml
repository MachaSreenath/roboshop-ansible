- name: Install shipping component
  hosts: shipping
  become: yes
  vars:
    mysql_password: RoboShop@1
  tasks:
    - name: Install Maven
      ansible.builtin.dnf:
        name: maven
        state: present

    - name: Create roboshop user
      ansible.builtin.user:
        name: roboshop

    - name: Recursively remove app directory
      ansible.builtin.file:
        path: /app
        state: absent

    - name: Create app directory
      ansible.builtin.file:
        path: /app
        state: directory

    - name: Download shipping application
      ansible.builtin.get_url:
        url: https://roboshop-builds.s3.amazonaws.com/shipping.zip
        dest: /tmp/shipping.zip

    - name: Extract shipping application
      ansible.builtin.unarchive:
        src: /tmp/shipping.zip
        dest: /app
        remote_src: yes

    - name: Install dependencies
      ansible.builtin.command:
        cmd: mvn clean package
        chdir: /app

    - name: Rename jar file
      ansible.builtin.command:
        cmd: mv target/shipping-1.0.jar shipping.jar
        chdir: /app

    - name: Copy shipping service file
      ansible.builtin.copy:
        src: shipping.service
        dest: /etc/systemd/system/shipping.service

    - name: Reload systemd and start shipping service
      ansible.builtin.systemd:
        daemon_reload: true
        name: shipping
        state: restarted
        enabled: yes

    - name: Install MySQL client
      ansible.builtin.dnf:
        name: mysql
        state: present

    - name: Ensure schema directory exists
      ansible.builtin.file:
        path: /app/schema
        state: directory

    - name: Copy shipping.sql file
      ansible.builtin.copy:
        src: files/shipping.sql
        dest: /app/schema/shipping.sql

    - name: Check if cities schema exists
      ansible.builtin.shell: >
        mysql -h mysql.forpractice.uno -uroot -p{{ mysql_password }}
        -sN -e "SELECT COUNT(*) FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = 'cities'"
      register: schema_check
      changed_when: false

    - name: Debug schema check output
      ansible.builtin.debug:
        msg: "Schema check output: {{ schema_check.stdout }}"

    - name: Load cities data if schema does not exist
      ansible.builtin.shell: >
        mysql -h mysql.forpractice.uno -uroot -p{{ mysql_password }}
        < /app/schema/shipping.sql
      when: schema_check.stdout != "1"
